;; configuração foda
(setq inhitbit-startup-message t)                   ; tirar a tela de apresentação

(tool-bar-mode   -1)                                ; oculta barra de ferrmentas
(menu-bar-mode   -1)                                ; oculta a barra de menu
(scroll-bar-mode -1)                                ; oculta a barra de rolagem
(tooltip-mode    -1)                                ; oculta dicas

(global-display-line-numbers-mode t)                ; exibe numeração de linhas
(column-number-mode t)                              ; exibe coluna atual na modeline
(global-hl-line-mode t)                             ; exibe destaque de linha

;; alertas visuais
(setq visible-bell t)

;; espaçamento das bordas laterais
(set-fringe-mode 10)

(delete-selection-mode t)                           ; apaga o texto selecionado

;; eolagem mais suave
(setq mouse-wheel-scroll-amount '(2 ((shift) . 1))  ; 2 linhas por vez
      mouse-wheel-progressive-speed nil             ; não acelera a rolagem
      mouse-wheel-follow-mouse 't                   ; rola a janela sob o mouse
      scrool-step 1)                                ; rola 1 linha com o teclado

;; quebra de linha
(global-visual-line-mode t)

;; verifica e inicia o package.el
(require 'package)

;;definição de repositórios
(setq package-archives '(("melpa" . "https://melpa.org/packages/")
			 ("org" . "https://orgmode.org/elpa/")
			 ("elpa" . "https://elpa.gnu.org/packages/")))

;; inicialização do sistema de pacores
(package-initialize)
(unless package-archive-contents
  (package-refresh-contents))

;; instalação do use package
(unless (package-installed-p 'use-package)
  (package-install 'use-package))

(require 'use-package)
(setq use-package-always-ensure t)

;;Instalação de autoupdate
(use-package auto-package-update
  :custom
  (auto-package-update-interval 7)
  (auto-package-update-prompt-before-update t)
  (auto-package-update-hide-results t)
  :config
  (auto-package-update-maybe)
  (auto-package-update-at-time "21:00"))


;;doomdeline
(use-package doom-modeline
    :ensure t
    :hook
    (after-init . doom-modeline-mode)
    :custom
   (doom-modeline-height 1)
    (set-face-attribute 'mode-line nil :font "inconsolata" :height 100)
    (set-face-attribute 'mode-line-inactive nil :font "inconsolata" :height 100)
    :config
    (setq doom-modeline-enable-word-count t))

;;modus themes
  (use-package modus-themes)
  (setq modus-themes-mode-line '(accented borderless)
        modus-themes-region '(bg-only)
        modus-themes-paren-match '(bold intense underline)
        modus-themes-headings '((t . (rainbow bold)))
        modus-themes-org-blocks 'gray-background)

;;pacotes de thema do doomemacs
(use-package doom-themes
  :ensure t
  :config (setq doom-themes-enable-bold t
              doom-themes-enable-italic t)
    (doom-themes-visual-bell-config)
    (doom-themes-org-config))

;;tango theme
;;(load-theme 'tango-dark t)

;; load modus theme
;;(load-theme 'modus-vivendi t)
  
;; load doom-palenight theme 
(load-theme 'doom-palenight t)

;;lsp-mode
(use-package lsp-mode
  :ensure t)

(use-package lsp-treemacs
  :ensure t)

;; python
;;(add-hook 'python-mode 'lsp)
;;(with-eval-after-load lsp-mode
;;  (add-hook 'lsp-mode-hook #'lsp-enable-whichi-key-integration)
;;  (yas-global-mode))
(use-package lsp-pyright
  :ensure t
  :hook (python-mode . (lambda ()
                          (require 'lsp-pyright)
                          (lsp))))  ; or lsp-deferred

;; dashboard e configuração
(use-package dashboard
  :ensure t
  :init
  (progn
    (setq dashboard-center-content t)
    (setq dashboard-startup-banner "~/Pictures/wallpapers/leona5.png")
    )
  
  :config
  (dashboard-setup-startup-hook))

;;vterm
(use-package vterm
    :ensure t)

;; flycheck
(use-package flycheck
  :ensure t
  :init (global-flycheck-mode))

;; company-mode
(add-hook 'after-init-hook 'global-company-mode)
(setq company-idle-delay 0)
(setq company-minimum-prefix-length 1)

;; emmet-mode
(use-package emmet-mode
  :ensure t)

;;web mode
;;(use-package web-mode
;;  :ensure t)
;;(add-to-list 'auto-mode-alist '("\\.html$" . web-mode))
;;(add-to-list 'auto-mode-alist '("\\.css?\\'" . web-mode))
;;(add-to-list 'auto-mode-alist '("\\.js\\'" . web-mode))
;;(add-hook 'web-mode-hook 'emmet-mode)
;;(add-hook 'web-mode-before-auto-complete-hooks 'company-mode-hook)


(custom-set-variables
 ;; custom-set-variables was added by custom.
 ;; if you edit it by hand, you could mess it up, so be careful.
 ;; your init file should contain only one such instance.
 ;; if there is more than one, they won't work right.
 '(package-selected-packages
   '(eclipse-theme nano-theme nano-modeline dirvish ranger eglot lsp-pyright python-mode emmet-mode web-mode vterm company flycheck lua-mode zenburn-theme dashboard lsp-treemacs lsp-mode doom-themes doom-modeline auto-package-update use-package))
 '(warning-suppress-log-types '(((flycheck syntax-checker)) ((flycheck syntax-checker))))
 '(warning-suppress-types '(((flycheck syntax-checker)))))
(custom-set-faces
 ;; custom-set-faces was added by custom.
 ;; if you edit it by hand, you could mess it up, so be careful.
 ;; your init file should contain only one such instance.
 ;; if there is more than one, they won't work right.
 )
(put 'dired-find-alternate-file 'disabled nil)
(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)
